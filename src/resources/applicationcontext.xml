<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--Spring自动代理-->
    <context:component-scan base-package="test.dao"></context:component-scan>
    <context:component-scan base-package="test.service"></context:component-scan>

    <!--配置properties-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"></property>
    </bean>
    <!--数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
    </bean>
    <!--创建sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!--获取mapper路径-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>
    <!--配置mapper扫描，解决dao层接口实现类的问题-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="test.dao"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>


    <!--<bean id="MyBatisTest" class="test.MyBatisTest"></bean>-->
    <bean id="MyBatisTest" class="test.MyBatisTest">
        <property name="name" value="lc"></property>
    </bean>
    <bean id="department" class="test.entity.Department">
        <constructor-arg name="id" value="1"></constructor-arg>
        <constructor-arg name="name" value="lc"></constructor-arg>
        <property name="offices">
            <list>
                <ref bean="office"></ref>
                <ref bean="officeTwo"></ref>
            </list>
        </property>
    </bean>
    <bean id="departmentTwo" class="test.entity.Department">
        <constructor-arg name="id" value="2"></constructor-arg>
        <constructor-arg name="name" value="ml"></constructor-arg>
    </bean>
    <bean id="office" class="test.entity.Office">
        <property name="id" value="1"></property>
        <property name="deptId" value="1"></property>
        <property name="department">
            <ref bean="departmentTwo"></ref>
        </property>
    </bean>
    <bean id="officeTwo" class="test.entity.Office">
        <property name="id" value="2"></property>
        <property name="deptId" value="2"></property>
        <property name="department" ref="department"></property>
    </bean>

    <bean id="upperOperation" class="test.interfaces.impl.UpLettersOperation">

    </bean>
    <bean id="lowerOperation" class="test.interfaces.impl.LowerLettersOperation">

    </bean>

    <bean id="departServiceImpl" class="test.service.impl.DepartServiceImpl">

    </bean>
    <!---->
    <!--<bean id="verifyCommon" class="test.VerifyCommon"></bean>-->
    <!--<bean id="businessTest" class="test.BusinessTest"></bean>-->
    <!--<aop:config>
        <aop:pointcut id="verifyPointCut" expression="execution(* test.BusinessTest.test(..))"></aop:pointcut>
        <aop:aspect ref="verifyCommon">
            <aop:after-throwing method="verify" pointcut-ref="verifyPointCut"></aop:after-throwing>
        </aop:aspect>
    </aop:config>-->

    <!--配置AOP自动代理-->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
</beans>